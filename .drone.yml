kind: pipeline
type: docker
name: node16

platform:
  os: linux
services:
  - name: Clickhouse-20.3
    image: yandex/clickhouse-server:20.3
    command:
      - clickhouse client -n <<-EOSQL
            CREATE TABLE IF NOT EXISTS default.quotas_data 
            (
                requestid String CODEC(ZSTD),
                subscriptionid String CODEC(ZSTD),
                quotaid String,calltime DateTime,
                increment Int32 CODEC(ZSTD),
                version Nullable(FixedString(8)) DEFAULT CAST('', 'Nullable(FixedString(8))'),
                userid Nullable(String),
                apiid Nullable(String),
                limit Nullable(Int32),
                period Nullable(FixedString(8))
            )
            ENGINE = MergeTree()
            PARTITION BY toYYYYMMDD(calltime)
            Order by (calltime , subscriptionid, quotaid);
            select 1;
            CREATE TABLE IF NOT EXISTS default.quotas_data_minute
            (
                calltimeAgg DateTime,
                incrementsum AggregateFunction(sum, Int32),
                subscriptionid String,
                quotaid String
            )
            ENGINE = AggregatingMergeTree()
            PARTITION BY toYYYYMM(calltimeAgg)
            ORDER BY (calltimeAgg, subscriptionid, quotaid)
            SETTINGS index_granularity = 8192;
            CREATE MATERIALIZED VIEW IF NOT EXISTS default.quotas_data_minute_mv
            TO default.quotas_data_minute
            AS
            SELECT toStartOfMinute(calltime) AS calltimeAgg, sumState(increment) as incrementsum, subscriptionid, quotaid
            FROM default.quotas_data
            GROUP BY toStartOfMinute(calltime), subscriptionid, quotaid;
            select 4;
            CREATE TABLE IF NOT EXISTS default.quotas_data_stage
            (
                requestid String CODEC(ZSTD(1)),
                subscriptionid String CODEC(ZSTD(1)),
                quotaid String,
                calltime DateTime,
                increment Int32 CODEC(ZSTD(1)),
                version Nullable(FixedString(8)) DEFAULT CAST('', 'Nullable(FixedString(8))'),
                userid Nullable(String),
                apiid Nullable(String),
                limit Nullable(Int32),
                period Nullable(FixedString(8)),
                loadtime DateTime DEFAULT toStartOfMinute(now())
            )
            ENGINE = MergeTree()
            PARTITION BY loadtime
            ORDER BY (calltime, subscriptionid, quotaid)
            SETTINGS index_granularity = 8192;
            select 5;
            EOSQL
steps:
  - name: install
    image: node:16
    environment:
      DB_HOST: postgresql
    commands:
      - pwd -P
      - echo 'PORT = 8080' >> ./config/.test.env
      - echo 'BUILD_VERSION = 1.0.1' >> ./config/.test.env
      - echo 'NODE_ENV = test' >> ./config/.test.env
      - echo 'SERVICE_NAME = quota' >> ./config/.test.env
      - echo 'CLICKHOUSE_HOST = 0.0.0.0' >> ./config/.test.env
      - echo 'CLICKHOUSE_PORT = 8123' >> ./config/.test.env
      - echo 'CLICKHOUSE_DB = default' >> ./config/.test.env
      - echo 'CLICKHOUSE_FORMAT = "tsv"' >> ./config/.test.env
      - echo 'AWS_REGION = us-east-1' >> ./config/.test.env
      - echo 'LOG_LEVEL = debug' >> ./config/.test.env
      - echo 'RUN_LOCAL=true' ' >> ./config/.test.env
  - name: test
    image: node:16  
    commands:
      - ls -lAtr
      - npm install
      - sleep 30
      - npm test
      